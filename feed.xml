<feed xmlns="http://www.w3.org/2005/Atom"> <id></id><title>Ligengxin's Blog</title><subtitle>This is Ligengxin's Blog, help myself record and share my knowledge. This Blog is a minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2023-02-15T16:11:47+08:00</updated> <author> <name>Gengxin Li</name> <uri></uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2023 Gengxin Li </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>如何在上链前确定一笔交易的transaction hash</title><link href="/posts/how-to-get-transaction-hash-before-sending-transaction/" rel="alternate" type="text/html" title="如何在上链前确定一笔交易的transaction hash" /><published>2023-01-05T00:00:00+08:00</published> <updated>2023-01-05T00:00:00+08:00</updated> <id>/posts/how-to-get-transaction-hash-before-sending-transaction/</id> <content src="/posts/how-to-get-transaction-hash-before-sending-transaction/" /> <author> <name>Gengxin Li</name> </author> <category term="Tutorial" /> <summary> 1.发现的问题   在做区块链项目的时候，一个核心的问题就是如何保证链上数据和数据库数据的数据一致性。比如一个订单，用户在购买后到发货。到底是先去链上 mint nft 给用户后再把订单状态改成已发货还是先改成已发货再去链上 mint nft 发送给用户？ 2.分析问题   我们来分析下这两个情况 先 mint 后改订单状态，这会导致用户在链上已经拥有了 nft，但是数据库中的订单状态还是未发货，这个时候如果系统崩溃,那么订单状态就会一直停留再未发货，如果系统中有什么自动补发机制的会那么可能就会导致用户再收到一个 nft，存在重复发货的问题。 先改订单状态后 mint，这样就会导致用户在数据库中的订单状态已经是已发货了，但是链上还没有 mint nft，这个时候如果系统崩溃，那么用户会存在商品未到账的情况，运营压力会很大。   对于我遇到的情况来说，重复发货的问题是无... </summary> </entry> <entry><title>如何在上链前确定一笔交易的transaction hash</title><link href="/posts/how-to-get-transaction-hash-before-send/" rel="alternate" type="text/html" title="如何在上链前确定一笔交易的transaction hash" /><published>2023-01-05T00:00:00+08:00</published> <updated>2023-01-05T00:00:00+08:00</updated> <id>/posts/how-to-get-transaction-hash-before-send/</id> <content src="/posts/how-to-get-transaction-hash-before-send/" /> <author> <name>Gengxin Li</name> </author> <category term="Tutorial" /> <summary> 1.发现的问题   在做区块链项目的时候，一个核心的问题就是如何保证链上数据和数据库数据的数据一致性。比如一个订单，用户在购买后到发货。到底是先去链上 mint nft 给用户后再把订单状态改成已发货还是先改成已发货再去链上 mint nft 发送给用户？ 2.分析问题   我们来分析下这两个情况 先 mint 后改订单状态，这会导致用户在链上已经拥有了 nft，但是数据库中的订单状态还是未发货，这个时候如果系统崩溃,那么订单状态就会一直停留再未发货，如果系统中有什么自动补发机制的会那么可能就会导致用户再收到一个 nft，存在重复发货的问题。 先改订单状态后 mint，这样就会导致用户在数据库中的订单状态已经是已发货了，但是链上还没有 mint nft，这个时候如果系统崩溃，那么用户会存在商品未到账的情况，运营压力会很大。   对于我遇到的情况来说，重复发货的问题是无... </summary> </entry> <entry><title>如何在上链前确定一笔交易的transaction hash</title><link href="/posts/get-transaction-hash-before-sending-transaction/" rel="alternate" type="text/html" title="如何在上链前确定一笔交易的transaction hash" /><published>2023-01-05T00:00:00+08:00</published> <updated>2023-01-05T00:00:00+08:00</updated> <id>/posts/get-transaction-hash-before-sending-transaction/</id> <content src="/posts/get-transaction-hash-before-sending-transaction/" /> <author> <name>Gengxin Li</name> </author> <category term="Tutorial" /> <summary> 1.发现的问题   在做区块链项目的时候，一个核心的问题就是如何保证链上数据和数据库数据的数据一致性。比如一个订单，用户在购买后到发货。到底是先去链上 mint nft 给用户后再把订单状态改成已发货还是先改成已发货再去链上 mint nft 发送给用户？ 2.分析问题   我们来分析下这两个情况 先 mint 后改订单状态，这会导致用户在链上已经拥有了 nft，但是数据库中的订单状态还是未发货，这个时候如果系统崩溃,那么订单状态就会一直停留再未发货，如果系统中有什么自动补发机制的会那么可能就会导致用户再收到一个 nft，存在重复发货的问题。 先改订单状态后 mint，这样就会导致用户在数据库中的订单状态已经是已发货了，但是链上还没有 mint nft，这个时候如果系统崩溃，那么用户会存在商品未到账的情况，运营压力会很大。   对于我遇到的情况来说，重复发货的问题是无... </summary> </entry> <entry><title>我的2022年终总结</title><link href="/posts/my-2022-summary/" rel="alternate" type="text/html" title="我的2022年终总结" /><published>2023-01-01T00:00:00+08:00</published> <updated>2023-01-01T00:00:00+08:00</updated> <id>/posts/my-2022-summary/</id> <content src="/posts/my-2022-summary/" /> <author> <name>Gengxin Li</name> </author> <category term="Summary" /> <summary> 1. 2022 年终总结   2022年算是一个我过得非常复杂的一年，有3件事情对我影响比较大吧。一是今年和女朋友分手了，二是公司上线的项目没走下去，三是因为疫情影响在家远程办公了一年，所以下半年搬家去了南昌住了半年体会了下二线城市的生活，体验了下岁月静好。 也可能是工作太忙了疏忽了女朋友的感受，大大小小吵架不少。最终还是没有走到最后，加上最后6月份公司的项目最后还是没有运营下去了，这两个事情也导致我沉闷了半年。想想这个项目为之加了那么多班。最后却没有收获，虽然一开始就告诉了自己不要抱太多希望，但是最终结果摆在面前的时候还是有点不甘心。   不过呢在今年我在项目的压力中快速成长，也在技术上收获了很多。因为我一直认为，一个人只能在有压力的情况下才能快速成长，并且只有在不断的做一些没尝试过的事情才能更快的扩展你的边界。所以在工作上我一般也是主动去做一些复杂和没有经历过的项目。因为没... </summary> </entry> <entry><title>使用 minikube 搭建 kubernetes 集群</title><link href="/posts/use-minikube-build-kubernetes/" rel="alternate" type="text/html" title="使用 minikube 搭建 kubernetes 集群" /><published>2022-11-26T00:00:00+08:00</published> <updated>2022-11-26T00:00:00+08:00</updated> <id>/posts/use-minikube-build-kubernetes/</id> <content src="/posts/use-minikube-build-kubernetes/" /> <author> <name>Gengxin Li</name> </author> <category term="Tools" /> <category term="Tutorial" /> <summary>    本文使用的系统架构为Ubuntu 20.04/22.04, CPU架构为x86-64. kubectl 版本为1.23.0, minikube版本为1.28.0 1.安装kubectl kubectl 是 kubernetes 的操作工具, 不管是 kubernetes 还是的 minikube,都用 kubectl 进行操作.阿里云上的 kubernetes 只需要给 kubectl 加上对应的配置即可操作阿里云上的 kubernetes 集群.参考通过kubectl连接Kubernetes集群 用 curl 命令下载最新发行版： curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl ... </summary> </entry> </feed>
